/**
 * The class ArrayList
 *
 * @author  Jake Tawney
 * @version 3/10/2019
 */

public class ArrayList{
    private int[] data;
    private int last; //index of the last element
    
    //set initial capacity to 10
    public ArrayList(){
        data = new int[10];
        last = -1;  //fix
    }

    //returns the number of elements in the list (not the capacity)
    public int size(){
        return last+1;
    }



    //Precondition: 0 <= index <= last
    //return the element at that index
    public int get(int index){
        return data[index];
    }



    //Precondition:  0 <= index <= last
    //sets the value at index to the newValue
    public void set(int index, int newValue){
        data[index]=newValue;
    }



    //Precondition:  0 <= index <= last
    //value at index is removed from the list â€“ all elements shift down
    //returns removed value
    public int remove(int index){
        int a=data[index];
        for(int i=index;i<data.length-1;i++){ 
        data[i]=data[i+1];
    }
        last=last-1;
        return a;
    }

    //Precondition:  0 <= index <= last+1
    //Inserts newValue at index.  Everything from index on gets shifted up
    public void add(int index, int newValue){
        for(int i=data.length-1;i>index;i--){  
        data[i]=data[i-1];
    }
        data[index]=newValue;
        last=last+1;
    }

    
    //adds newValue to the end of the list
    public void add(int newValue){
        if(last==data.length-1){
            resize();
        }
        last=last+1;
        data[last]=newValue;
    }


    //private method means "not accessible outside the class"
    //This is intentional.
    //This method should double the capacity
    private void resize(){
        int n=data.length*2;
        int[]data2=new int[n];
        for(int i=0;i<=last;i++){
            data2[i]=data[i];
        }
        data=data2;
    }


    //returns, for example, "[3, 6, 7, 9]"
    //This will be helpful for your debugging
    public String toString(){
        String a;
        if(last>=0){
        a="[";
        for(int i=0;i<last;i++){
            a=a+data[i]+", ";
        }
        a=a+data[last]+"]";
    }
    else{
        a="[]";
    }
        return a;
   }
    //returns true if two lists have exactly the same elements
    //in exactly the same order
    public boolean equals(ArrayList otherList){
        if(this.size()!=otherList.size()){
            return false;
        }
        else{
            for(int i=0;i<=last; i++){
                if(this.get(i)!=otherList.get(i)){
                    return false;
                }
                else{
                }
        }
        return true;
    }
}
}
